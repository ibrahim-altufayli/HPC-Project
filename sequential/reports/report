Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ./code/mandelbrot.cpp(98,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ./code/mandelbrot.cpp(108,9)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ ./code/mandelbrot.cpp(113,13) ]
   LOOP END
LOOP END

LOOP BEGIN at ./code/mandelbrot.cpp(160,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ./code/mandelbrot.cpp(162,24) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at ./code/mandelbrot.cpp(158,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ ./code/mandelbrot.cpp(162,24) ]
LOOP END
===========================================================================

Begin optimization report for: calc_rmse(int *, std::string *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.8.5/bits/basic_string.h(539,54) inlined into ./code/mandelbrot.cpp(51,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/locale_facets.h(869,8) ]

   LOOP BEGIN at ./code/mandelbrot.cpp(31,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/basic_string.h(2208,49) ]
   LOOP END
LOOP END
===========================================================================
